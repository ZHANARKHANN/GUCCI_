pipeline {
    agent any

    triggers {
        // 02:00 –ü–Ω‚Äì–ü—Ç
        cron('0 2 * * 1-5')
    }

    tools {
        gradle 'Gradle' // –∏–º—è –∏–∑ Global Tool Configuration
    }

    stages {
        stage('Checkout') {
            steps {
                // –ï—Å–ª–∏ –¥–∂–æ–±–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ "Pipeline script from SCM", —ç—Ç–æ—Ç —à–∞–≥ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å,
                // –Ω–æ –æ—Å—Ç–∞–≤–∏–º, —á—Ç–æ–±—ã —è–≤–Ω–æ –≤–∑—è—Ç—å –≤–µ—Ç–∫—É kaniet.
                git branch: 'kaniet', url: 'https://github.com/kaniet-mukaev/Gucci.git'
            }
        }

        stage('Run Smoke Tests') {
            steps {
                // –ù–µ —Ä–æ–Ω—è–µ–º –ø–∞–π–ø–ª–∞–π–Ω –ø—Ä–∏ —Ñ–µ–π–ª–∞—Ö —Ç–µ—Å—Ç–æ–≤ ‚Äî –¥–∞—ë–º –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    sh './gradlew clean smokeTest --continue'
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                // –î–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∏ —Ñ–µ–π–ª—ã ‚Äî –æ—Ç—á—ë—Ç —Å–æ–±–µ—Ä—ë—Ç—Å—è
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    sh './gradlew allureReport'
                }
            }
        }

        stage('Download Allure Notifications Jar') {
            steps {
                dir('..') {
                    sh '''
                        FILE=allure-notifications-4.8.0.jar
                        if [ ! -f "$FILE" ]; then
                          wget https://github.com/qa-guru/allure-notifications/releases/download/4.8.0/allure-notifications-4.8.0.jar
                        fi
                    '''
                }
            }
        }

        stage('Send Notifications') {
            steps {
                sh '''
                    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø–æ–∫–∞–∂–µ–º –≥–¥–µ –æ—Ç—á—ë—Ç (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
                    ls -la build/reports/allure-report || true
                    ls -la build/reports/allure-report/allureReport || true

                    java -DconfigFile=notifications/config.json \
                         -jar ../allure-notifications-4.8.0.jar
                '''
            }
        }
    }

    post {
        always {
            echo "üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ Allure –æ—Ç—á—ë—Ç—ã"
            // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–µ–Ω–Ω–æ smokeTest
            junit 'build/test-results/smokeTest/*.xml'
            // –°—ã—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã Allure
            archiveArtifacts artifacts: 'build/allure-results/**', fingerprint: true
            // –ì–æ—Ç–æ–≤—ã–π html-–æ—Ç—á—ë—Ç Gradle Allure Plugin
            archiveArtifacts artifacts: 'build/reports/allure-report/**', fingerprint: true
        }
    }
}
