pipeline {
    agent any

    tools {
        gradle 'Gradle' // –∏–º—è Gradle –∏–∑ Jenkins Global Tool Configuration
    }

    environment {
        SLACK_TOKEN = 'xoxb-1234567890-abcdef' // —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean test'
            }
        }

        stage('Generate Allure Report') {
            steps {
                allure([
                    includeProperties: false,
                    jdk: '',
                    results: [[path: 'build/allure-results']]
                ])
            }
        }
    }

    post {
        always {
            echo "üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ Allure –æ—Ç—á—ë—Ç—ã"
            junit 'build/test-results/test/*.xml'
            archiveArtifacts artifacts: 'build/allure-results/**', allowEmptyArchive: true
            archiveArtifacts artifacts: 'allure-report/**', allowEmptyArchive: true

            echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –≤ Slack"
            sh """
                curl -F file=@allure-report/index.html \
                     -F "initial_comment=Allure Report for build #${env.BUILD_NUMBER}" \
                     -F channels=#your-slack-channel \
                     -H "Authorization: Bearer ${SLACK_TOKEN}" \
                     https://slack.com/api/files.upload
            """
        }
        success {
            echo "‚úÖ Pipeline —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω"
        }
        failure {
            echo "‚ùå Pipeline —É–ø–∞–ª, –Ω–æ Allure –æ—Ç—á—ë—Ç –∏ Slack –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
        }
    }
}
